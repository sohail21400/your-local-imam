import requests
import streamlit as st
from streamlit_chat import message
import json
from PIL import Image
# TODO: add a button to clear the chat. DONE
# TODO: auto first letter capitalization for user input. DONE
# TODO: add temperature slider inside an expandable section. DONE
# TODO: temprature is not working. DONE
# TODO: make the text box pinned on top or bottom. NOT POSSIBLE
# TODO: Add cautionary message in the sidebar. DONE

# TODO: show these demo questions when user taps qustion mark icon
# TODO: add auto save the messages as cache
# TODO: put custom avathar

st.set_page_config(
    page_title="Local Imam",
    page_icon=":robot:",
    layout="centered",
    initial_sidebar_state="collapsed",
)

# storing the chat
if 'messages' not in st.session_state:
    st.session_state['messages'] = [
    {"role": "system",
        "content": "Act as a Muslim imam who gives me guidance and advice on how to deal with life problems. Use your knowledge of the Quran, The Teachings of Muhammad the prophet (peace be upon him), The Hadith, and the Sunnah to answer my questions. Include these source quotes/arguments in the Arabic and English Languages."},
    ]
if 'show_help' not in st.session_state:
    st.session_state['show_help'] = True

demo_questions = """"What is the meaning of life?', 
'How should I pray', 
'Who is prophet Muhammed?',
'What is the best way to spend my money?'"""

# this prints the full json data which is given for OpenAI completion
def print_messages():
    print("\n\n")
    for json_data in st.session_state.messages:
        pretty_json = json.dumps(json_data, indent=4, sort_keys=True)
        print(pretty_json)
    print("\n\n")


# this returns the user input taken from the text box and adds the user message to the messages json list
def get_user_input():
    user_input = st.text_area("Ask me anything", "", key="user_input", placeholder="What is the meaning of life?").capitalize()
    
    if user_input != "":
        st.session_state.messages.append({"role": "user", "content": user_input})
    # todo: clear the text input after hitting enter
        st.session_state.show_help = False
    return user_input

# this generates the response from the OpenAI API and adds the response to the messages json list
def generate_response(temperature):
    headers = {
        'Content-Type': 'application/json',
    }
    data = {
        "model": "gpt-3.5-turbo",
        "messages": st.session_state.messages,
        "stream": False,
        'temperature': temperature,
    }
    response = requests.post(
        'https://chatgpt-api.shn.hk/v1/', headers=headers, json=data)
    # TODO: do you need other response codes?
    reply = response.json()
    print(reply)
    reply = response.json()['choices'][0]['message']['content']
    st.session_state.messages.append({"role": "assistant", "content": reply})

    print_messages()
    return reply

image = Image.open('image.jpg')
st.image(image)


st.title("Your Local Imam")
with st.expander("Configure"):
    col1, col2 = st.columns(2)
    with col1:
        temperature = st.slider('Temperature', 0.0, 2.0, 0.0)
    with col2:
        clear_chat = st.button("Clear chat")
        if clear_chat:
            st.session_state.messages = []

col1, col2 = st.columns([3,9])

with col1:
    user_input = get_user_input()
    if user_input != "":
        output = generate_response(temperature)
with col2:
    # TODO: first put a default hardcoded message in a message window
    if st.session_state.messages:
        for i in range(len(st.session_state.messages)-1, -1, -1):
            role = st.session_state.messages[i]['role']
            # if the message is from the system, don't show the message
            if role == 'system':
                continue
            message(st.session_state.messages[i]['content'], key=str(i), is_user=role == 'user')

        # todo: you can use this below code is there is auto scroll and the text box is below like in a normal messaging app
        # for i in range(0, len(st.session_state['generated'])):
        #     message(st.session_state["generated"][i], key=str(i))
        #     message(st.session_state['past'][i],
        #             is_user=True, key=str(i) + '_user')
st.text("")
st.text("")
_, col, _,  = st.columns([1, 5, 1])
if st.session_state.show_help:
    with col:
        message("You can try questions like:\n " + demo_questions, key="demo_questions", is_user=False, avatar_style="shapes")




with st.sidebar:
    st.text("Assalamu alaikum! \
    Please be advised that the information provided by this program is generated by an AI model and may contain errors or inaccuracies. \
    If you commit any sins or wrong actions based on the advice provided by this program, don't blame me! \
    Remember to always consult with a well-respected Islamic scholar before making any important decisions. \
    And keep in mind, Verily, Allah knows the best - even better than GPT-3! JazakAllah Khair for using this program.")

hide_streamlit_style = """
            <style>
            #MainMenu {visibility: hidden;}
            footer {visibility: hidden;}
            footer:after {
                content:'sohail21400@gmail.com'; 
                visibility: visible;
                display: block;
                position: relative;
                #background-color: red;
                padding: 5px;
                top: 2px;
            }
            header {visibility: hidden;}
            </style>
            """
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

